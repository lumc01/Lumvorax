modules = ["c-clang14", "bash", "cpp-clang14", "python-3.12", "c-clang"]
[agent]
expertMode = true

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "LUM/VORAX System"

[[workflows.workflow]]
name = "LUM/VORAX System"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./bin/lum_vorax_simple"

[[workflows.workflow]]
name = "TEST_FORENSIQUE_ULTRA_STRICT"
author = 47824281
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== TESTS FORENSIQUES ULTRA-STRICTS - G√âN√âRATION LOGS R√âELS ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Conform√©ment au prompt.txt - Standards forensiques ISO/IEC 27037\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 1: Compilation syst√®me forensique\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make -f Makefile.forensic clean"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make -f Makefile.forensic all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 2: Ex√©cution tests avec g√©n√©ration logs temps r√©el\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "if [ -f bin/test_forensic_all_modules ]; then"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"‚úÖ Lancement tests forensiques pour 44 modules...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    make -f Makefile.forensic test-forensic"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "else"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"‚ùå Compilation √©chou√©e\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    exit 1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fi"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 3: Validation logs g√©n√©r√©s\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make -f Makefile.forensic validate-logs"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 4: V√©rification preuves r√©elles\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä PREUVES G√âN√âR√âES EN TEMPS R√âEL:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Total fichiers logs: $(find logs/forensic -name \"*.log\" | wc -l)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Taille totale logs: $(du -sh logs/forensic/ | cut -f1)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìã √âCHANTILLON LOGS R√âELS:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "find logs/forensic/modules -name \"*.log\" | head -5 | while read file; do"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"üìÑ $file ($(wc -l < \"$file\") lignes)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    head -10 \"$file\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"---\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "done"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ TESTS FORENSIQUES ULTRA-STRICTS TERMIN√âS\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîí Tous les logs sont g√©n√©r√©s et valid√©s selon standards\""

[nix]
packages = ["openssh", "file", "tree", "clang", "gnumake", "gdb", "vim-full", "nano"]
channel = "stable-25_05"

[deployment]
deploymentTarget = "vm"
run = ["./bin/lum_vorax_simple"]
build = ["make", "-f", "Makefile.simple.new", "all"]
