modules = ["c-clang14", "cpp-clang14", "bash", "python-3.12", "c-clang"]
[agent]
expertMode = true

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "LUM_VORAX_FORENSIC_COMPLETE"
author = 47310341
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make clean"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./execute_complete_benchmarks.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./benchmark_logs_impact.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./generate_complete_forensic_report.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== VALIDATION FORENSIQUE COMPLETE ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Rapport final g√©n√©r√© avec donn√©es authentiques\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ls -la RAPPORT_FORENSIQUE_EXECUTION_REELLE_*.md"

[[workflows.workflow]]
name = "LUM_VORAX_VALIDATION_COMPLETE"
author = 47316168
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x validate_complete_system.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./validate_complete_system.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== SYST√àME VALID√â SELON PROMPT.TXT ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Toutes corrections appliqu√©es conform√©ment aux standards\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Rapport mis √† jour avec donn√©es authentiques\""

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "LUM/VORAX System Demo"

[[workflows.workflow]]
name = "LUM/VORAX System Demo"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ LUM/VORAX - Presence-Based Computing System\" && echo \"===============================================\" && echo && echo \"üîß Building system...\" && make clean && make all && echo && echo \"‚úÖ System built successfully!\" && echo && echo \"üìä Running system validation tests:\" && echo && ./bin/lum_vorax --sizeof-checks && echo && ./bin/lum_vorax --crypto-validation && echo && echo \"üéØ Running main system demo:\" && echo && ./bin/lum_vorax"

[[workflows.workflow]]
name = "VALIDATION_CORRECTIONS_COMPLETES"
author = 47363890
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== VALIDATION CORRECTIONS SYST√àME LUM/VORAX ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 1: Compilation propre\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make clean"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make all 2>&1 | tee compilation_corrections.log"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 2: Tests m√©moire avec AddressSanitizer\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make debug 2>&1 | tee compilation_debug.log"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 3: Tests de stress authentiques\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "if [ -f bin/lum_vorax ]; then"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"Ex√©cution tests sans timeout pour v√©rification m√©moire\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    ./bin/lum_vorax"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fi"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Phase 4: Validation forensique finale\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ls -la RAPPORT_INSPECTION_GENERALE_COMPLETE_20250109_220000.md"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ VALIDATION CORRECTIONS TERMIN√âE\""

[nix]
packages = ["openssh", "file"]
channel = "stable-25_05"

[deployment]
deploymentTarget = "vm"
run = ["./bin/lum_vorax"]
build = ["make", "clean", "&&", "make", "all"]
