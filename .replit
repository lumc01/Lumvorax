modules = ["c-clang14", "cpp-clang14", "bash", "python-3.12"]
[agent]
expertMode = true

[workflows]
runButton = "LUM_VORAX_FORENSIC_COMPLETE"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "LUM_VORAX_DEMO"

[[workflows.workflow]]
name = "LUM_VORAX_DEMO"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./bin/lum_vorax"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "LUM_VORAX_FORENSIC_COMPLETE"
author = 47310341
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make clean"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "make all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./execute_complete_benchmarks.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./benchmark_logs_impact.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "./generate_complete_forensic_report.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== VALIDATION FORENSIQUE COMPLETE ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Rapport final généré avec données authentiques\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ls -la RAPPORT_FORENSIQUE_EXECUTION_REELLE_*.md"

[nix]
packages = ["openssh", "file"]
channel = "stable-25_05"

[deployment]
deploymentTarget = "vm"
run = ["./bin/lum_vorax"]
build = ["make", "all"]
