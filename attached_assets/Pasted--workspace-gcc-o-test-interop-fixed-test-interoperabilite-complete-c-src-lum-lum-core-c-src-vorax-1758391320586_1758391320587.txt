~/workspace$ gcc -o test_interop_fixed test_interoperabilite_complete.c src/lum/lum_core.c src/vorax/vorax_operations.c src/advanced_calculations/matrix_calculator.c src/advanced_calculations/quantum_simulator.c src/advanced_calculations/neural_network_processor.c src/complex_modules/realtime_analytics.c src/optimization/zero_copy_allocator.c src/optimization/simd_optimizer.c src/optimization/pareto_optimizer.c src/debug/memory_tracker.c -Isrc -lm -lpthread -std=c99 -D_GNU_SOURCE
test_interoperabilite_complete.c:255:5: error: redefinition of ‘main’
  255 | int main() {
      |     ^~~~
test_interoperabilite_complete.c:217:5: note: previous definition of ‘main’ with type ‘int(void)’
  217 | int main(void) {
      |     ^~~~
test_interoperabilite_complete.c: In function ‘main’:
test_interoperabilite_complete.c:270:5: error: unknown type name ‘matrix_calculator_config_t’; did you mean ‘matrix_calculator_result_t’?
  270 |     matrix_calculator_config_t* matrix_config = matrix_calculator_config_create(4, 4);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |     matrix_calculator_result_t
test_interoperabilite_complete.c:270:49: error: implicit declaration of function ‘matrix_calculator_config_create’; did you mean ‘matrix_calculator_create’? [-Wimplicit-function-declaration]
  270 |     matrix_calculator_config_t* matrix_config = matrix_calculator_config_create(4, 4);
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                 matrix_calculator_create
test_interoperabilite_complete.c:270:49: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
test_interoperabilite_complete.c:276:5: error: unknown type name ‘quantum_system_t’; did you mean ‘quantum_result_t’?
  276 |     quantum_system_t* quantum = quantum_system_create(8);
      |     ^~~~~~~~~~~~~~~~
      |     quantum_result_t
test_interoperabilite_complete.c:276:33: error: implicit declaration of function ‘quantum_system_create’; did you mean ‘quantum_lum_create’? [-Wimplicit-function-declaration]
  276 |     quantum_system_t* quantum = quantum_system_create(8);
      |                                 ^~~~~~~~~~~~~~~~~~~~~
      |                                 quantum_lum_create
test_interoperabilite_complete.c:276:33: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
test_interoperabilite_complete.c:282:55: error: passing argument 1 of ‘neural_network_create’ makes pointer from integer without a cast [-Wint-conversion]
  282 |     neural_network_t* network = neural_network_create(10, 5, 3);
      |                                                       ^~
      |                                                       |
      |                                                       int
In file included from test_interoperabilite_complete.c:8:
src/advanced_calculations/neural_network_processor.h:97:49: note: expected ‘size_t *’ {aka ‘long unsigned int *’} but argument is of type ‘int’
   97 | neural_network_t* neural_network_create(size_t* layer_sizes, size_t layer_count);
      |                                         ~~~~~~~~^~~~~~~~~~~
test_interoperabilite_complete.c:282:33: error: too many arguments to function ‘neural_network_create’
  282 |     neural_network_t* network = neural_network_create(10, 5, 3);
      |                                 ^~~~~~~~~~~~~~~~~~~~~
src/advanced_calculations/neural_network_processor.h:97:19: note: declared here
   97 | neural_network_t* neural_network_create(size_t* layer_sizes, size_t layer_count);
      |                   ^~~~~~~~~~~~~~~~~~~~~
test_interoperabilite_complete.c:288:5: error: unknown type name ‘zero_copy_allocator_t’; did you mean ‘zero_copy_allocation_t’?
  288 |     zero_copy_allocator_t* allocator = zero_copy_allocator_create(1024);
      |     ^~~~~~~~~~~~~~~~~~~~~
      |     zero_copy_allocation_t
test_interoperabilite_complete.c:288:40: error: implicit declaration of function ‘zero_copy_allocator_create’; did you mean ‘zero_copy_pool_create’? [-Wimplicit-function-declaration]
  288 |     zero_copy_allocator_t* allocator = zero_copy_allocator_create(1024);
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                        zero_copy_pool_create
test_interoperabilite_complete.c:288:40: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
test_interoperabilite_complete.c:296:5: error: implicit declaration of function ‘matrix_calculator_config_destroy’; did you mean ‘matrix_calculator_result_destroy’? [-Wimplicit-function-declaration]
  296 |     matrix_calculator_config_destroy(matrix_config);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |     matrix_calculator_result_destroy
test_interoperabilite_complete.c:297:5: error: implicit declaration of function ‘quantum_system_destroy’; did you mean ‘quantum_result_destroy’? [-Wimplicit-function-declaration]
  297 |     quantum_system_destroy(quantum);
      |     ^~~~~~~~~~~~~~~~~~~~~~
      |     quantum_result_destroy
test_interoperabilite_complete.c:298:28: error: passing argument 1 of ‘neural_network_destroy’ from incompatible pointer type [-Wincompatible-pointer-types]
  298 |     neural_network_destroy(network);
      |                            ^~~~~~~
      |                            |
      |                            neural_network_t *
src/advanced_calculations/neural_network_processor.h:98:48: note: expected ‘neural_network_t **’ but argument is of type ‘neural_network_t *’
   98 | void neural_network_destroy(neural_network_t** network_ptr);
      |                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
test_interoperabilite_complete.c:299:5: error: implicit declaration of function ‘zero_copy_allocator_destroy’; did you mean ‘zero_copy_allocation_destroy’? [-Wimplicit-function-declaration]
  299 |     zero_copy_allocator_destroy(allocator);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |     zero_copy_allocation_destroy
src/lum/lum_core.c:17:13: error: conflicting types for ‘lum_batch_operation_e’; have ‘int’
   17 | typedef int lum_batch_operation_e; // Pour la compatibilité
      |             ^~~~~~~~~~~~~~~~~~~~~
In file included from src/lum/lum_core.c:1:
src/lum/lum_core.h:96:3: note: previous declaration of ‘lum_batch_operation_e’ with type ‘lum_batch_operation_e’
   96 | } lum_batch_operation_e;
      |   ^~~~~~~~~~~~~~~~~~~~~
src/lum/lum_core.c: In function ‘lum_generate_id’:
src/lum/lum_core.c:563:25: error: ‘id_counter_mutex’ undeclared (first use in this function)
  563 |     pthread_mutex_lock(&id_counter_mutex);
      |                         ^~~~~~~~~~~~~~~~
src/lum/lum_core.c:563:25: note: each undeclared identifier is reported only once for each function it appears in
src/lum/lum_core.c:567:9: error: ‘lum_id_counter’ undeclared (first use in this function); did you mean ‘lum_id_counter_atomic’?
  567 |     if (lum_id_counter >= UINT32_MAX - 1000) {
      |         ^~~~~~~~~~~~~~
      |         lum_id_counter_atomic
src/lum/lum_core.c: At top level:
src/lum/lum_core.c:656:6: error: conflicting types for ‘lum_group_process_batch_50m_optimized’; have ‘_Bool(lum_group_t *, int)’
  656 | bool lum_group_process_batch_50m_optimized(lum_group_t* group, lum_batch_operation_e operation) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/lum/lum_core.h:105:6: note: previous declaration of ‘lum_group_process_batch_50m_optimized’ with type ‘_Bool(lum_group_t *, lum_batch_operation_e)’
  105 | bool lum_group_process_batch_50m_optimized(lum_group_t* group, lum_batch_operation_e operation);
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/vorax/vorax_operations.c: In function ‘vorax_fuse’:
src/vorax/vorax_operations.c:62:5: error: implicit declaration of function ‘atomic_store’ [-Wimplicit-function-declaration]
   62 |     atomic_store(&fused->count, total_count);
      |     ^~~~~~~~~~~~
src/advanced_calculations/quantum_simulator.c: In function ‘quantum_lum_create’:
src/advanced_calculations/quantum_simulator.c:20:27: error: implicit declaration of function ‘atomic_fetch_add’ [-Wimplicit-function-declaration]
   20 |     uint64_t quantum_id = atomic_fetch_add(&lum_id_counter_atomic, 1);
      |                           ^~~~~~~~~~~~~~~~
src/advanced_calculations/quantum_simulator.c:20:45: error: ‘lum_id_counter_atomic’ undeclared (first use in this function)
   20 |     uint64_t quantum_id = atomic_fetch_add(&lum_id_counter_atomic, 1);
      |                                             ^~~~~~~~~~~~~~~~~~~~~
src/advanced_calculations/quantum_simulator.c:20:45: note: each undeclared identifier is reported only once for each function it appears in
~/workspace$ 