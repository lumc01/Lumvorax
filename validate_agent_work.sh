
#!/bin/bash

echo "üîç === VALIDATION FORENSIQUE TRAVAIL AGENT REPLIT ==="
echo "Date: $(date)"
echo ""

# Phase 1: V√©rification compilation
echo "üìã Phase 1: V√©rification compilation..."
make clean > /dev/null 2>&1
if make all > compilation_check.log 2>&1; then
    echo "‚úÖ Compilation: SUCC√àS"
    COMPILATION_OK=true
else
    echo "‚ùå Compilation: √âCHEC"
    echo "Erreurs dans compilation_check.log"
    COMPILATION_OK=false
fi

# Phase 2: Test ex√©cution simple
echo ""
echo "üìã Phase 2: Test ex√©cution syst√®me..."
if [ "$COMPILATION_OK" = true ] && [ -f bin/lum_vorax_complete ]; then
    timeout 30s ./bin/lum_vorax_complete --progressive-stress-all > execution_test.log 2>&1 &
    EXEC_PID=$!
    sleep 5
    if ps -p $EXEC_PID > /dev/null; then
        echo "‚úÖ Ex√©cution: D√âMARR√âE (PID: $EXEC_PID)"
        kill $EXEC_PID 2>/dev/null
        echo "‚úÖ Test interrompu proprement"
    else
        echo "‚ùå Ex√©cution: CRASH IMM√âDIAT"
    fi
else
    echo "‚ùå Binaire manquant"
fi

# Phase 3: V√©rification logs individuels
echo ""
echo "üìã Phase 3: V√©rification logs individuels..."
LOGS_FOUND=0
LOGS_EMPTY=0

for module_dir in logs/individual/*/; do
    if [ -d "$module_dir" ]; then
        module_name=$(basename "$module_dir")
        log_files=$(find "$module_dir" -name "*.log" | wc -l)
        if [ $log_files -gt 0 ]; then
            LOGS_FOUND=$((LOGS_FOUND + 1))
            echo "‚úÖ Module $module_name: $log_files logs"
        else
            LOGS_EMPTY=$((LOGS_EMPTY + 1))
            echo "‚ùå Module $module_name: AUCUN LOG"
        fi
    fi
done

# Phase 4: Rapport final
echo ""
echo "üìä === RAPPORT FINAL VALIDATION ==="
echo "Modules avec logs: $LOGS_FOUND"
echo "Modules sans logs: $LOGS_EMPTY"
echo "Compilation: $([ "$COMPILATION_OK" = true ] && echo "OK" || echo "√âCHEC")"

# Note pour l'utilisateur
echo ""
echo "üéØ R√âSULTAT: $LOGS_FOUND modules valid√©s sur 44 attendus"
if [ $LOGS_FOUND -lt 5 ]; then
    echo "‚ùå VALIDATION √âCHOU√âE - Logs individuels non g√©n√©r√©s"
    exit 1
else
    echo "‚ö†Ô∏è VALIDATION PARTIELLE - Besoin correction logs"
    exit 2
fi
